global
	log xxx.xxx.xxx.xxx:514 local1
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
	ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

	compression algo gzip
	compression type text/html text/plain text/css text/javascript

frontend ssl_redirector
	bind *:443 ssl crt /etc/haproxy/ssl/

	# Only if you never want HTTP again
	# See https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
	http-response set-header Strict-Transport-Security max-age=15552001

	http-request del-header X-Forwarded-Proto
	http-request set-header X-Forwarded-Proto https if { ssl_fc }
	acl letsencrypt-request path_beg -i /.well-known/acme-challenge/
	use_backend letsencrypt_backend if letsencrypt-request
	default_backend website_backend

frontend http_redirect
	bind *:80
	acl letsencrypt-request path_beg -i /.well-known/acme-challenge/
	# If your are using a non standard port, tune this
#	http-request replace-header Host ^(.*?)(:[0-9]+)?$ \1:10443
	redirect scheme https code 302 if !letsencrypt-request
	use_backend letsencrypt_backend if letsencrypt-request

backend letsencrypt_backend
	server letsencrypt 127.0.0.1:11444

backend website_backend
	server server01 xxx.xxx.xxx.xxx:12080

	http-request add-header X-Forwarded-Proto https

	# Hide server engine
	rspidel ^Server:.*$

	# Security related headers (very restrictive)
	rspadd Content-Security-Policy:\ default-src\ https:\
	rspadd X-Frame-Options:\ SAMEORIGIN
	rspadd X-Content-Type-Options:\ nosniff
	rspadd X-Xss-Protection:\ 1;\ mode=block
	http-response set-header Referrer-Policy "same-origin"
